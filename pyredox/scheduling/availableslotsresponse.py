# -*- coding: utf-8 -*-
# ----  AUTO-GENERATED BY redox_lib_gen. DO NOT MODIFY MANUALLY!!  ---- #

from typing import List, Union

from pydantic import Field

from ..abstract_base import EventTypeAbstractModel, RedoxAbstractModel
from ..field_types import Number


class AvailableSlotsResponse(EventTypeAbstractModel):

    AvailableSlots: List["AvailableSlotsResponseAvailableSlot"] = Field(...)
    Meta: "AvailableSlotsResponseMeta" = Field(...)


class AvailableSlotsResponseAvailableSlot(RedoxAbstractModel):

    DateTime: str = Field(...)
    Duration: Number = Field(...)
    ID: Union[str, None] = Field(None)
    Location: "AvailableSlotsResponseAvailableSlotLocation" = Field(None)
    Notes: List[str] = Field(None)
    Provider: "AvailableSlotsResponseAvailableSlotProvider" = Field(None)
    Reason: Union[str, None] = Field(None)


class AvailableSlotsResponseAvailableSlotLocation(RedoxAbstractModel):

    Department: Union[str, None] = Field(None)
    Facility: Union[str, None] = Field(None)
    Room: Union[str, None] = Field(None)
    Type: Union[str, None] = Field(None)


class AvailableSlotsResponseAvailableSlotProvider(RedoxAbstractModel):

    Address: "AvailableSlotsResponseAvailableSlotProviderAddress" = Field(None)
    Credentials: List[str] = Field(None)
    EmailAddresses: List[str] = Field(None)
    FirstName: Union[str, None] = Field(None)
    ID: Union[str, None] = Field(None)
    IDType: Union[str, None] = Field(None)
    LastName: Union[str, None] = Field(None)
    Location: "AvailableSlotsResponseAvailableSlotProviderLocation" = Field(None)
    PhoneNumber: "AvailableSlotsResponseAvailableSlotProviderPhoneNumber" = Field(None)


class AvailableSlotsResponseAvailableSlotProviderAddress(RedoxAbstractModel):

    City: Union[str, None] = Field(None)
    Country: Union[str, None] = Field(None)
    County: Union[str, None] = Field(None)
    State: Union[str, None] = Field(None)
    StreetAddress: Union[str, None] = Field(None)
    ZIP: Union[str, None] = Field(None)


class AvailableSlotsResponseAvailableSlotProviderLocation(RedoxAbstractModel):

    Department: Union[str, None] = Field(None)
    Facility: Union[str, None] = Field(None)
    Room: Union[str, None] = Field(None)
    Type: Union[str, None] = Field(None)


class AvailableSlotsResponseAvailableSlotProviderPhoneNumber(RedoxAbstractModel):

    Office: Union[str, None] = Field(None)


class AvailableSlotsResponseMeta(RedoxAbstractModel):

    DataModel: str = Field(...)
    Destinations: List["AvailableSlotsResponseMetaDestination"] = Field(None)
    EventDateTime: Union[str, None] = Field(None)
    EventType: str = Field(...)
    FacilityCode: Union[str, None] = Field(None)
    IsIncomplete: Union[bool, None] = Field(None)
    Logs: List["AvailableSlotsResponseMetaLog"] = Field(None)
    Message: "AvailableSlotsResponseMetaMessage" = Field(None)
    Source: "AvailableSlotsResponseMetaSource" = Field(None)
    Test: Union[bool, None] = Field(None)
    Transmission: "AvailableSlotsResponseMetaTransmission" = Field(None)


class AvailableSlotsResponseMetaDestination(RedoxAbstractModel):

    ID: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class AvailableSlotsResponseMetaLog(RedoxAbstractModel):

    AttemptID: Union[str, None] = Field(None)
    ID: Union[str, None] = Field(None)


class AvailableSlotsResponseMetaMessage(RedoxAbstractModel):

    ID: Union[Number, None] = Field(None)


class AvailableSlotsResponseMetaSource(RedoxAbstractModel):

    ID: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class AvailableSlotsResponseMetaTransmission(RedoxAbstractModel):

    ID: Union[Number, None] = Field(None)


AvailableSlotsResponse.update_forward_refs()
AvailableSlotsResponseAvailableSlot.update_forward_refs()
AvailableSlotsResponseAvailableSlotProvider.update_forward_refs()
AvailableSlotsResponseMeta.update_forward_refs()
