# -*- coding: utf-8 -*-
# ----  AUTO-GENERATED BY redox_lib_gen. DO NOT MODIFY MANUALLY!!  ---- #

from typing import List, Union

from pydantic import Field

from ..abstract_base import EventTypeAbstractModel, RedoxAbstractModel
from ..field_types import Number


class PatientQueryResponse(EventTypeAbstractModel):

    AdvanceDirectives: List["PatientQueryResponseAdvanceDirective"] = Field(None)
    AdvanceDirectivesText: Union[str, None] = Field(None)
    Allergies: List["PatientQueryResponseAllergy"] = Field(None)
    AllergyText: Union[str, None] = Field(None)
    CareTeams: List["PatientQueryResponseCareTeam"] = Field(None)
    Encounters: List["PatientQueryResponseEncounter"] = Field(None)
    EncountersText: Union[str, None] = Field(None)
    FamilyHistory: List["PatientQueryResponseFamilyHistory"] = Field(None)
    FamilyHistoryText: Union[str, None] = Field(None)
    FunctionalStatus: "PatientQueryResponseFunctionalStatus" = Field(None)
    FunctionalStatusText: Union[str, None] = Field(None)
    Goals: List["PatientQueryResponseGoal"] = Field(None)
    GoalsText: Union[str, None] = Field(None)
    Header: "PatientQueryResponseHeader" = Field(None)
    HealthConcerns: List["PatientQueryResponseHealthConcern"] = Field(None)
    HealthConcernsText: Union[str, None] = Field(None)
    ImmunizationText: Union[str, None] = Field(None)
    Immunizations: List["PatientQueryResponseImmunization"] = Field(None)
    Insurances: List["PatientQueryResponseInsurance"] = Field(None)
    InsurancesText: Union[str, None] = Field(None)
    MedicalEquipment: List["PatientQueryResponseMedicalEquipment"] = Field(None)
    MedicalEquipmentText: Union[str, None] = Field(None)
    Medications: List["PatientQueryResponseMedication"] = Field(None)
    MedicationsText: Union[str, None] = Field(None)
    Meta: "PatientQueryResponseMeta" = Field(...)
    PlanOfCare: "PatientQueryResponsePlanOfCare" = Field(None)
    PlanOfCareText: Union[str, None] = Field(None)
    Problems: List["PatientQueryResponseProblem"] = Field(None)
    ProblemsText: Union[str, None] = Field(None)
    Procedures: "PatientQueryResponseProcedures" = Field(None)
    ProceduresText: Union[str, None] = Field(None)
    ResolvedProblems: List["PatientQueryResponseResolvedProblem"] = Field(None)
    ResolvedProblemsText: Union[str, None] = Field(None)
    ResultText: Union[str, None] = Field(None)
    Results: List["PatientQueryResponseResult"] = Field(None)
    SocialHistory: "PatientQueryResponseSocialHistory" = Field(None)
    SocialHistoryText: Union[str, None] = Field(None)
    VitalSigns: List["PatientQueryResponseVitalSign"] = Field(None)
    VitalSignsText: Union[str, None] = Field(None)


class PatientQueryResponseAdvanceDirective(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseAdvanceDirectiveAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Custodians: List["PatientQueryResponseAdvanceDirectiveCustodian"] = Field(None)
    EndDate: Union[str, None] = Field(None)
    ExternalReference: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)
    StartDate: Union[str, None] = Field(None)
    Type: "PatientQueryResponseAdvanceDirectiveType" = Field(None)
    VerifiedBy: List["PatientQueryResponseAdvanceDirectiveVerifiedBy"] = Field(None)


class PatientQueryResponseAdvanceDirectiveAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseAdvanceDirectiveCustodian(RedoxAbstractModel):

    Address: "PatientQueryResponseAdvanceDirectiveCustodianAddress" = Field(None)
    Credentials: Union[str, None] = Field(None)
    FirstName: Union[str, None] = Field(None)
    LastName: Union[str, None] = Field(None)


class PatientQueryResponseAdvanceDirectiveCustodianAddress(RedoxAbstractModel):

    City: Union[str, None] = Field(None)
    Country: Union[str, None] = Field(None)
    State: Union[str, None] = Field(None)
    StreetAddress: Union[str, None] = Field(None)
    ZIP: Union[str, None] = Field(None)


class PatientQueryResponseAdvanceDirectiveType(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseAdvanceDirectiveTypeAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseAdvanceDirectiveTypeAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseAdvanceDirectiveVerifiedBy(RedoxAbstractModel):

    Credentials: Union[str, None] = Field(None)
    DateTime: Union[str, None] = Field(None)
    FirstName: Union[str, None] = Field(None)
    LastName: Union[str, None] = Field(None)


class PatientQueryResponseAllergy(RedoxAbstractModel):

    Comment: Union[str, None] = Field(None)
    Comments: List["PatientQueryResponseAllergyComment"] = Field(None)
    Criticality: "PatientQueryResponseAllergyCriticality" = Field(None)
    EndDate: Union[str, None] = Field(None)
    Reaction: List["PatientQueryResponseAllergyReaction"] = Field(None)
    Severity: "PatientQueryResponseAllergySeverity" = Field(None)
    StartDate: Union[str, None] = Field(None)
    Status: "PatientQueryResponseAllergyStatus" = Field(None)
    Substance: "PatientQueryResponseAllergySubstance" = Field(None)
    Type: "PatientQueryResponseAllergyType" = Field(None)


class PatientQueryResponseAllergyComment(RedoxAbstractModel):

    Text: Union[str, None] = Field(None)


class PatientQueryResponseAllergyCriticality(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseAllergyReaction(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseAllergyReactionAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)
    Severity: "PatientQueryResponseAllergyReactionSeverity" = Field(None)
    Text: Union[str, None] = Field(None)


class PatientQueryResponseAllergyReactionAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseAllergyReactionSeverity(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseAllergySeverity(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseAllergyStatus(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseAllergySubstance(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseAllergySubstanceAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseAllergySubstanceAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseAllergyType(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseAllergyTypeAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseAllergyTypeAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseCareTeam(RedoxAbstractModel):

    Encounter: "PatientQueryResponseCareTeamEncounter" = Field(None)
    Members: List["PatientQueryResponseCareTeamMember"] = Field(None)
    Name: Union[str, None] = Field(None)
    Organization: "PatientQueryResponseCareTeamOrganization" = Field(None)
    Status: Union[str, None] = Field(None)
    Types: List["PatientQueryResponseCareTeamType"] = Field(None)


class PatientQueryResponseCareTeamEncounter(RedoxAbstractModel):

    DateTime: Union[str, None] = Field(None)
    EndDateTime: Union[str, None] = Field(None)
    Identifiers: List["PatientQueryResponseCareTeamEncounterIdentifier"] = Field(None)
    Type: "PatientQueryResponseCareTeamEncounterType" = Field(None)


class PatientQueryResponseCareTeamEncounterIdentifier(RedoxAbstractModel):

    ID: Union[str, None] = Field(None)
    IDType: Union[str, None] = Field(None)


class PatientQueryResponseCareTeamEncounterType(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseCareTeamEncounterTypeAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseCareTeamEncounterTypeAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseCareTeamMember(RedoxAbstractModel):

    Address: "PatientQueryResponseCareTeamMemberAddress" = Field(None)
    Credentials: List[str] = Field(None)
    EndDateTime: Union[str, None] = Field(None)
    FirstName: Union[str, None] = Field(None)
    Identifiers: List["PatientQueryResponseCareTeamMemberIdentifier"] = Field(None)
    LastName: Union[str, None] = Field(None)
    MiddleName: Union[str, None] = Field(None)
    Roles: List["PatientQueryResponseCareTeamMemberRole"] = Field(None)
    StartDateTime: Union[str, None] = Field(None)
    Telecom: List["PatientQueryResponseCareTeamMemberTelecom"] = Field(None)


class PatientQueryResponseCareTeamMemberAddress(RedoxAbstractModel):

    City: Union[str, None] = Field(None)
    Country: Union[str, None] = Field(None)
    County: Union[str, None] = Field(None)
    State: Union[str, None] = Field(None)
    StreetAddress: Union[str, None] = Field(None)
    ZIP: Union[str, None] = Field(None)


class PatientQueryResponseCareTeamMemberIdentifier(RedoxAbstractModel):

    ID: Union[str, None] = Field(None)
    IDType: Union[str, None] = Field(None)


class PatientQueryResponseCareTeamMemberRole(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseCareTeamMemberRoleAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseCareTeamMemberRoleAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseCareTeamMemberTelecom(RedoxAbstractModel):

    System: Union[None] = Field(None)
    Use: Union[None] = Field(None)
    Value: Union[None] = Field(None)


class PatientQueryResponseCareTeamOrganization(RedoxAbstractModel):

    Address: "PatientQueryResponseCareTeamOrganizationAddress" = Field(None)
    Identifiers: List["PatientQueryResponseCareTeamOrganizationIdentifier"] = Field(
        None
    )
    Name: Union[None] = Field(None)
    Telecom: List["PatientQueryResponseCareTeamOrganizationTelecom"] = Field(None)
    Type: "PatientQueryResponseCareTeamOrganizationType" = Field(None)


class PatientQueryResponseCareTeamOrganizationAddress(RedoxAbstractModel):

    City: Union[str, None] = Field(None)
    Country: Union[str, None] = Field(None)
    County: Union[str, None] = Field(None)
    State: Union[str, None] = Field(None)
    StreetAddress: Union[str, None] = Field(None)
    ZIP: Union[str, None] = Field(None)


class PatientQueryResponseCareTeamOrganizationIdentifier(RedoxAbstractModel):

    ID: Union[str, None] = Field(None)
    IDType: Union[str, None] = Field(None)


class PatientQueryResponseCareTeamOrganizationTelecom(RedoxAbstractModel):

    System: Union[None] = Field(None)
    Use: Union[None] = Field(None)
    Value: Union[None] = Field(None)


class PatientQueryResponseCareTeamOrganizationType(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseCareTeamOrganizationTypeAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseCareTeamOrganizationTypeAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseCareTeamType(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseCareTeamTypeAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseCareTeamTypeAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseEncounter(RedoxAbstractModel):

    DateTime: Union[str, None] = Field(None)
    Diagnosis: List["PatientQueryResponseEncounterDiagnosis"] = Field(None)
    DischargeDisposition: "PatientQueryResponseEncounterDischargeDisposition" = Field(
        None
    )
    EndDateTime: Union[str, None] = Field(None)
    Identifiers: List["PatientQueryResponseEncounterIdentifier"] = Field(None)
    Locations: List["PatientQueryResponseEncounterLocation"] = Field(None)
    Providers: List["PatientQueryResponseEncounterProvider"] = Field(None)
    ReasonForVisit: List["PatientQueryResponseEncounterReasonForVisit"] = Field(None)
    Type: "PatientQueryResponseEncounterType" = Field(None)


class PatientQueryResponseEncounterDiagnosis(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseEncounterDiagnosisAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseEncounterDiagnosisAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseEncounterDischargeDisposition(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseEncounterDischargeDispositionAltCode"] = Field(
        None
    )
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseEncounterDischargeDispositionAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseEncounterIdentifier(RedoxAbstractModel):

    ID: Union[str, None] = Field(None)
    IDType: Union[str, None] = Field(None)


class PatientQueryResponseEncounterLocation(RedoxAbstractModel):

    Address: "PatientQueryResponseEncounterLocationAddress" = Field(None)
    Identifiers: List["PatientQueryResponseEncounterLocationIdentifier"] = Field(None)
    Name: Union[str, None] = Field(None)
    Telecom: List["PatientQueryResponseEncounterLocationTelecom"] = Field(None)
    Type: "PatientQueryResponseEncounterLocationType" = Field(None)


class PatientQueryResponseEncounterLocationAddress(RedoxAbstractModel):

    City: Union[str, None] = Field(None)
    Country: Union[str, None] = Field(None)
    State: Union[str, None] = Field(None)
    StreetAddress: Union[str, None] = Field(None)
    ZIP: Union[str, None] = Field(None)


class PatientQueryResponseEncounterLocationIdentifier(RedoxAbstractModel):

    ID: Union[str, None] = Field(None)
    IDType: Union[str, None] = Field(None)


class PatientQueryResponseEncounterLocationTelecom(RedoxAbstractModel):

    System: Union[None] = Field(None)
    Use: Union[None] = Field(None)
    Value: Union[None] = Field(None)


class PatientQueryResponseEncounterLocationType(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseEncounterLocationTypeAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseEncounterLocationTypeAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseEncounterProvider(RedoxAbstractModel):

    Address: "PatientQueryResponseEncounterProviderAddress" = Field(None)
    Credentials: List[str] = Field(None)
    EmailAddresses: List[str] = Field(None)
    FirstName: Union[str, None] = Field(None)
    ID: Union[str, None] = Field(None)
    IDType: Union[str, None] = Field(None)
    LastName: Union[str, None] = Field(None)
    Location: "PatientQueryResponseEncounterProviderLocation" = Field(None)
    NPI: Union[str, None] = Field(None)
    PhoneNumber: "PatientQueryResponseEncounterProviderPhoneNumber" = Field(None)
    Role: "PatientQueryResponseEncounterProviderRole" = Field(None)


class PatientQueryResponseEncounterProviderAddress(RedoxAbstractModel):

    City: Union[str, None] = Field(None)
    Country: Union[str, None] = Field(None)
    County: Union[str, None] = Field(None)
    State: Union[str, None] = Field(None)
    StreetAddress: Union[str, None] = Field(None)
    ZIP: Union[str, None] = Field(None)


class PatientQueryResponseEncounterProviderLocation(RedoxAbstractModel):

    Department: Union[str, None] = Field(None)
    Facility: Union[str, None] = Field(None)
    Room: Union[str, None] = Field(None)
    Type: Union[str, None] = Field(None)


class PatientQueryResponseEncounterProviderPhoneNumber(RedoxAbstractModel):

    Office: Union[str, None] = Field(None)


class PatientQueryResponseEncounterProviderRole(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseEncounterProviderRoleAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseEncounterProviderRoleAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseEncounterReasonForVisit(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseEncounterReasonForVisitAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseEncounterReasonForVisitAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseEncounterType(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseEncounterTypeAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseEncounterTypeAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseFamilyHistory(RedoxAbstractModel):

    Problems: List["PatientQueryResponseFamilyHistoryProblem"] = Field(None)
    Relation: "PatientQueryResponseFamilyHistoryRelation" = Field(None)


class PatientQueryResponseFamilyHistoryProblem(RedoxAbstractModel):

    AgeAtOnset: Union[str, None] = Field(None)
    AltCodes: List["PatientQueryResponseFamilyHistoryProblemAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    DateTime: Union[str, None] = Field(None)
    IsCauseOfDeath: Union[bool, None] = Field(None)
    Name: Union[str, None] = Field(None)
    Type: "PatientQueryResponseFamilyHistoryProblemType" = Field(None)


class PatientQueryResponseFamilyHistoryProblemAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseFamilyHistoryProblemType(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseFamilyHistoryRelation(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Demographics: "PatientQueryResponseFamilyHistoryRelationDemographics" = Field(None)
    IsDeceased: Union[bool, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseFamilyHistoryRelationDemographics(RedoxAbstractModel):

    DOB: Union[str, None] = Field(None)
    Sex: Union[str, None] = Field(None)


class PatientQueryResponseFunctionalStatus(RedoxAbstractModel):

    Observations: List["PatientQueryResponseFunctionalStatusObservation"] = Field(None)
    Supplies: List["PatientQueryResponseFunctionalStatusSupply"] = Field(None)


class PatientQueryResponseFunctionalStatusObservation(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseFunctionalStatusObservationAltCode"] = Field(
        None
    )
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    CodedValue: "PatientQueryResponseFunctionalStatusObservationCodedValue" = Field(
        None
    )
    Comments: List["PatientQueryResponseFunctionalStatusObservationComment"] = Field(
        None
    )
    DateTime: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)
    ReferenceRange: "PatientQueryResponseFunctionalStatusObservationReferenceRange" = (
        Field(None)
    )
    Units: Union[str, None] = Field(None)
    Value: Union[str, None] = Field(None)


class PatientQueryResponseFunctionalStatusObservationAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseFunctionalStatusObservationCodedValue(RedoxAbstractModel):

    AltCodes: List[
        "PatientQueryResponseFunctionalStatusObservationCodedValueAltCode"
    ] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseFunctionalStatusObservationCodedValueAltCode(
    RedoxAbstractModel
):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseFunctionalStatusObservationComment(RedoxAbstractModel):

    Text: Union[str, None] = Field(None)


class PatientQueryResponseFunctionalStatusObservationReferenceRange(RedoxAbstractModel):

    High: Union[Number, None] = Field(None)
    Low: Union[Number, None] = Field(None)
    Text: Union[str, None] = Field(None)


class PatientQueryResponseFunctionalStatusSupply(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseFunctionalStatusSupplyAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    DateTime: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)
    Status: Union[str, None] = Field(None)


class PatientQueryResponseFunctionalStatusSupplyAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseGoal(RedoxAbstractModel):

    AchievementStatus: "PatientQueryResponseGoalAchievementStatus" = Field(None)
    AltCodes: List["PatientQueryResponseGoalAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    CodedValue: "PatientQueryResponseGoalCodedValue" = Field(None)
    Comments: List["PatientQueryResponseGoalComment"] = Field(None)
    DateTime: Union[str, None] = Field(None)
    EndDate: Union[str, None] = Field(None)
    Milestones: List["PatientQueryResponseGoalMilestone"] = Field(None)
    Name: Union[str, None] = Field(None)
    Priority: "PatientQueryResponseGoalPriority" = Field(None)
    StartDate: Union[str, None] = Field(None)
    Units: Union[str, None] = Field(None)
    Value: Union[str, None] = Field(None)


class PatientQueryResponseGoalAchievementStatus(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseGoalAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseGoalCodedValue(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseGoalCodedValueAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseGoalCodedValueAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseGoalComment(RedoxAbstractModel):

    Text: Union[str, None] = Field(None)


class PatientQueryResponseGoalMilestone(RedoxAbstractModel):

    AchievementStatus: "PatientQueryResponseGoalMilestoneAchievementStatus" = Field(
        None
    )
    AltCodes: List["PatientQueryResponseGoalMilestoneAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    CodedValue: "PatientQueryResponseGoalMilestoneCodedValue" = Field(None)
    DateTime: Union[str, None] = Field(None)
    EndDate: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)
    Priority: "PatientQueryResponseGoalMilestonePriority" = Field(None)
    StartDate: Union[str, None] = Field(None)
    Units: Union[str, None] = Field(None)
    Value: Union[str, None] = Field(None)


class PatientQueryResponseGoalMilestoneAchievementStatus(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseGoalMilestoneAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseGoalMilestoneCodedValue(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseGoalMilestoneCodedValueAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseGoalMilestoneCodedValueAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseGoalMilestonePriority(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseGoalPriority(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseHeader(RedoxAbstractModel):

    Document: "PatientQueryResponseHeaderDocument" = Field(None)
    PCP: "PatientQueryResponseHeaderPCP" = Field(None)
    Patient: "PatientQueryResponseHeaderPatient" = Field(None)


class PatientQueryResponseHeaderDocument(RedoxAbstractModel):

    Author: "PatientQueryResponseHeaderDocumentAuthor" = Field(None)
    Confidentiality: "PatientQueryResponseHeaderDocumentConfidentiality" = Field(None)
    Custodian: "PatientQueryResponseHeaderDocumentCustodian" = Field(None)
    DateTime: Union[str, None] = Field(None)
    ID: Union[str, None] = Field(None)
    Locale: Union[str, None] = Field(None)
    Title: Union[str, None] = Field(None)
    Type: Union[str, None] = Field(None)
    TypeCode: "PatientQueryResponseHeaderDocumentTypeCode" = Field(None)


class PatientQueryResponseHeaderDocumentAuthor(RedoxAbstractModel):

    Address: "PatientQueryResponseHeaderDocumentAuthorAddress" = Field(None)
    Credentials: List[str] = Field(None)
    EmailAddresses: List[str] = Field(None)
    FirstName: Union[str, None] = Field(None)
    ID: Union[str, None] = Field(None)
    IDType: Union[str, None] = Field(None)
    LastName: Union[str, None] = Field(None)
    Location: "PatientQueryResponseHeaderDocumentAuthorLocation" = Field(None)
    PhoneNumber: "PatientQueryResponseHeaderDocumentAuthorPhoneNumber" = Field(None)
    Type: Union[str, None] = Field(None)


class PatientQueryResponseHeaderDocumentAuthorAddress(RedoxAbstractModel):

    City: Union[str, None] = Field(None)
    Country: Union[str, None] = Field(None)
    County: Union[str, None] = Field(None)
    State: Union[str, None] = Field(None)
    StreetAddress: Union[str, None] = Field(None)
    ZIP: Union[str, None] = Field(None)


class PatientQueryResponseHeaderDocumentAuthorLocation(RedoxAbstractModel):

    Department: Union[str, None] = Field(None)
    Facility: Union[str, None] = Field(None)
    Room: Union[str, None] = Field(None)
    Type: Union[str, None] = Field(None)


class PatientQueryResponseHeaderDocumentAuthorPhoneNumber(RedoxAbstractModel):

    Office: Union[str, None] = Field(None)


class PatientQueryResponseHeaderDocumentConfidentiality(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseHeaderDocumentCustodian(RedoxAbstractModel):

    Address: "PatientQueryResponseHeaderDocumentCustodianAddress" = Field(None)
    Identifiers: List["PatientQueryResponseHeaderDocumentCustodianIdentifier"] = Field(
        None
    )
    Name: Union[None] = Field(None)
    Telecom: List["PatientQueryResponseHeaderDocumentCustodianTelecom"] = Field(None)
    Type: "PatientQueryResponseHeaderDocumentCustodianType" = Field(None)


class PatientQueryResponseHeaderDocumentCustodianAddress(RedoxAbstractModel):

    City: Union[str, None] = Field(None)
    Country: Union[str, None] = Field(None)
    County: Union[str, None] = Field(None)
    State: Union[str, None] = Field(None)
    StreetAddress: Union[str, None] = Field(None)
    ZIP: Union[str, None] = Field(None)


class PatientQueryResponseHeaderDocumentCustodianIdentifier(RedoxAbstractModel):

    ID: Union[str, None] = Field(None)
    IDType: Union[str, None] = Field(None)


class PatientQueryResponseHeaderDocumentCustodianTelecom(RedoxAbstractModel):

    System: Union[None] = Field(None)
    Use: Union[None] = Field(None)
    Value: Union[None] = Field(None)


class PatientQueryResponseHeaderDocumentCustodianType(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseHeaderDocumentCustodianTypeAltCode"] = Field(
        None
    )
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseHeaderDocumentCustodianTypeAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseHeaderDocumentTypeCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseHeaderPCP(RedoxAbstractModel):

    Address: "PatientQueryResponseHeaderPCPAddress" = Field(None)
    Credentials: List[str] = Field(None)
    EmailAddresses: List[str] = Field(None)
    FirstName: Union[str, None] = Field(None)
    ID: Union[str, None] = Field(None)
    IDType: Union[str, None] = Field(None)
    LastName: Union[str, None] = Field(None)
    Location: "PatientQueryResponseHeaderPCPLocation" = Field(None)
    PhoneNumber: "PatientQueryResponseHeaderPCPPhoneNumber" = Field(None)
    Type: Union[str, None] = Field(None)


class PatientQueryResponseHeaderPCPAddress(RedoxAbstractModel):

    City: Union[str, None] = Field(None)
    Country: Union[str, None] = Field(None)
    County: Union[str, None] = Field(None)
    State: Union[str, None] = Field(None)
    StreetAddress: Union[str, None] = Field(None)
    ZIP: Union[str, None] = Field(None)


class PatientQueryResponseHeaderPCPLocation(RedoxAbstractModel):

    Department: Union[str, None] = Field(None)
    Facility: Union[str, None] = Field(None)
    Room: Union[str, None] = Field(None)
    Type: Union[str, None] = Field(None)


class PatientQueryResponseHeaderPCPPhoneNumber(RedoxAbstractModel):

    Office: Union[str, None] = Field(None)


class PatientQueryResponseHeaderPatient(RedoxAbstractModel):

    Demographics: "PatientQueryResponseHeaderPatientDemographics" = Field(None)
    Identifiers: List["PatientQueryResponseHeaderPatientIdentifier"] = Field(None)
    Organization: "PatientQueryResponseHeaderPatientOrganization" = Field(None)


class PatientQueryResponseHeaderPatientDemographics(RedoxAbstractModel):

    Address: "PatientQueryResponseHeaderPatientDemographicsAddress" = Field(None)
    DOB: Union[str, None] = Field(None)
    DeathDateTime: Union[str, None] = Field(None)
    EmailAddresses: List[
        "PatientQueryResponseHeaderPatientDemographicsEmailAddress"
    ] = Field(None)
    EthnicGroupCodes: List[
        "PatientQueryResponseHeaderPatientDemographicsEthnicGroupCode"
    ] = Field(None)
    Ethnicity: Union[str, None] = Field(None)
    FirstName: Union[str, None] = Field(None)
    IsDeceased: Union[bool, None] = Field(None)
    Language: Union[str, None] = Field(None)
    LastName: Union[str, None] = Field(None)
    MaritalStatus: Union[str, None] = Field(None)
    MiddleName: Union[str, None] = Field(None)
    PhoneNumber: "PatientQueryResponseHeaderPatientDemographicsPhoneNumber" = Field(
        None
    )
    Race: Union[str, None] = Field(None)
    RaceCodes: List["PatientQueryResponseHeaderPatientDemographicsRaceCode"] = Field(
        None
    )
    Religion: Union[str, None] = Field(None)
    SSN: Union[str, None] = Field(None)
    Sex: Union[str, None] = Field(None)


class PatientQueryResponseHeaderPatientDemographicsAddress(RedoxAbstractModel):

    City: Union[str, None] = Field(None)
    Country: Union[str, None] = Field(None)
    County: Union[str, None] = Field(None)
    State: Union[str, None] = Field(None)
    StreetAddress: Union[str, None] = Field(None)
    ZIP: Union[str, None] = Field(None)


class PatientQueryResponseHeaderPatientDemographicsEmailAddress(RedoxAbstractModel):

    Address: Union[str, None] = Field(None)


class PatientQueryResponseHeaderPatientDemographicsEthnicGroupCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseHeaderPatientDemographicsPhoneNumber(RedoxAbstractModel):

    Home: Union[str, None] = Field(None)
    Mobile: Union[str, None] = Field(None)


class PatientQueryResponseHeaderPatientDemographicsRaceCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseHeaderPatientIdentifier(RedoxAbstractModel):

    ID: Union[str, None] = Field(None)
    IDType: Union[str, None] = Field(None)
    Type: Union[str, None] = Field(None)


class PatientQueryResponseHeaderPatientOrganization(RedoxAbstractModel):

    Address: "PatientQueryResponseHeaderPatientOrganizationAddress" = Field(None)
    Identifiers: List[
        "PatientQueryResponseHeaderPatientOrganizationIdentifier"
    ] = Field(None)
    Name: Union[None] = Field(None)
    Telecom: List["PatientQueryResponseHeaderPatientOrganizationTelecom"] = Field(None)
    Type: "PatientQueryResponseHeaderPatientOrganizationType" = Field(None)


class PatientQueryResponseHeaderPatientOrganizationAddress(RedoxAbstractModel):

    City: Union[str, None] = Field(None)
    Country: Union[str, None] = Field(None)
    County: Union[str, None] = Field(None)
    State: Union[str, None] = Field(None)
    StreetAddress: Union[str, None] = Field(None)
    ZIP: Union[str, None] = Field(None)


class PatientQueryResponseHeaderPatientOrganizationIdentifier(RedoxAbstractModel):

    ID: Union[str, None] = Field(None)
    IDType: Union[str, None] = Field(None)


class PatientQueryResponseHeaderPatientOrganizationTelecom(RedoxAbstractModel):

    System: Union[None] = Field(None)
    Use: Union[None] = Field(None)
    Value: Union[None] = Field(None)


class PatientQueryResponseHeaderPatientOrganizationType(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseHeaderPatientOrganizationTypeAltCode"] = Field(
        None
    )
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseHeaderPatientOrganizationTypeAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseHealthConcern(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseHealthConcernAltCode"] = Field(None)
    Category: "PatientQueryResponseHealthConcernCategory" = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Comments: List["PatientQueryResponseHealthConcernComment"] = Field(None)
    ConcernType: Union[str, None] = Field(None)
    EndDate: Union[str, None] = Field(None)
    Interpretation: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)
    StartDate: Union[str, None] = Field(None)
    Status: Union[str, None] = Field(None)
    TargetSite: "PatientQueryResponseHealthConcernTargetSite" = Field(None)
    Units: Union[None] = Field(None)
    Value: Union[None] = Field(None)


class PatientQueryResponseHealthConcernAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseHealthConcernCategory(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseHealthConcernCategoryAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseHealthConcernCategoryAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseHealthConcernComment(RedoxAbstractModel):

    Text: Union[str, None] = Field(None)


class PatientQueryResponseHealthConcernTargetSite(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseHealthConcernTargetSiteAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseHealthConcernTargetSiteAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseImmunization(RedoxAbstractModel):

    DateTime: Union[str, None] = Field(None)
    Dose: "PatientQueryResponseImmunizationDose" = Field(None)
    Product: "PatientQueryResponseImmunizationProduct" = Field(None)
    Route: "PatientQueryResponseImmunizationRoute" = Field(None)
    Status: Union[str, None] = Field(None)


class PatientQueryResponseImmunizationDose(RedoxAbstractModel):

    Quantity: Union[str, None] = Field(None)
    Units: Union[str, None] = Field(None)


class PatientQueryResponseImmunizationProduct(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseImmunizationProductAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    LotNumber: Union[str, None] = Field(None)
    Manufacturer: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseImmunizationProductAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseImmunizationRoute(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseImmunizationRouteAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseImmunizationRouteAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseInsurance(RedoxAbstractModel):

    AgreementType: Union[str, None] = Field(None)
    Company: "PatientQueryResponseInsuranceCompany" = Field(None)
    CoverageType: Union[str, None] = Field(None)
    EffectiveDate: Union[str, None] = Field(None)
    ExpirationDate: Union[str, None] = Field(None)
    GroupName: Union[str, None] = Field(None)
    GroupNumber: Union[str, None] = Field(None)
    Insured: "PatientQueryResponseInsuranceInsured" = Field(None)
    MemberNumber: Union[str, None] = Field(None)
    Plan: "PatientQueryResponseInsurancePlan" = Field(None)
    PolicyNumber: Union[str, None] = Field(None)
    Priority: Union[str, None] = Field(None)


class PatientQueryResponseInsuranceCompany(RedoxAbstractModel):

    Address: "PatientQueryResponseInsuranceCompanyAddress" = Field(None)
    ID: Union[str, None] = Field(None)
    IDType: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)
    PhoneNumber: Union[str, None] = Field(None)


class PatientQueryResponseInsuranceCompanyAddress(RedoxAbstractModel):

    City: Union[str, None] = Field(None)
    Country: Union[str, None] = Field(None)
    County: Union[str, None] = Field(None)
    State: Union[str, None] = Field(None)
    StreetAddress: Union[str, None] = Field(None)
    ZIP: Union[str, None] = Field(None)


class PatientQueryResponseInsuranceInsured(RedoxAbstractModel):

    Address: "PatientQueryResponseInsuranceInsuredAddress" = Field(None)
    DOB: Union[str, None] = Field(None)
    FirstName: Union[str, None] = Field(None)
    Identifiers: List["PatientQueryResponseInsuranceInsuredIdentifier"] = Field(None)
    LastName: Union[str, None] = Field(None)
    MiddleName: Union[str, None] = Field(None)
    Relationship: Union[str, None] = Field(None)
    SSN: Union[str, None] = Field(None)
    Sex: Union[str, None] = Field(None)


class PatientQueryResponseInsuranceInsuredAddress(RedoxAbstractModel):

    City: Union[str, None] = Field(None)
    Country: Union[str, None] = Field(None)
    County: Union[str, None] = Field(None)
    State: Union[str, None] = Field(None)
    StreetAddress: Union[str, None] = Field(None)
    ZIP: Union[str, None] = Field(None)


class PatientQueryResponseInsuranceInsuredIdentifier(RedoxAbstractModel):

    ID: Union[str, None] = Field(None)
    IDType: Union[str, None] = Field(None)


class PatientQueryResponseInsurancePlan(RedoxAbstractModel):

    ID: Union[str, None] = Field(None)
    IDType: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)
    Type: Union[str, None] = Field(None)


class PatientQueryResponseMedicalEquipment(RedoxAbstractModel):

    Comments: List["PatientQueryResponseMedicalEquipmentComment"] = Field(None)
    Procedure: "PatientQueryResponseMedicalEquipmentProcedure" = Field(None)
    Product: "PatientQueryResponseMedicalEquipmentProduct" = Field(None)
    Quantity: Union[str, None] = Field(None)
    StartDate: Union[str, None] = Field(None)
    Status: Union[str, None] = Field(None)


class PatientQueryResponseMedicalEquipmentComment(RedoxAbstractModel):

    Text: Union[str, None] = Field(None)


class PatientQueryResponseMedicalEquipmentProcedure(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseMedicalEquipmentProcedureAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)
    TargetSite: "PatientQueryResponseMedicalEquipmentProcedureTargetSite" = Field(None)


class PatientQueryResponseMedicalEquipmentProcedureAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseMedicalEquipmentProcedureTargetSite(RedoxAbstractModel):

    AltCodes: List[
        "PatientQueryResponseMedicalEquipmentProcedureTargetSiteAltCode"
    ] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseMedicalEquipmentProcedureTargetSiteAltCode(
    RedoxAbstractModel
):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseMedicalEquipmentProduct(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseMedicalEquipmentProductAltCode"] = Field(None)
    BrandName: Union[str, None] = Field(None)
    CatalogNumber: Union[str, None] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    DeviceID: Union[str, None] = Field(None)
    DistinctID: Union[str, None] = Field(None)
    ExpirationDate: Union[str, None] = Field(None)
    Identifiers: List["PatientQueryResponseMedicalEquipmentProductIdentifier"] = Field(
        None
    )
    Issuer: Union[str, None] = Field(None)
    LotNumber: Union[str, None] = Field(None)
    ManufactureDate: Union[str, None] = Field(None)
    ManufacturerName: Union[str, None] = Field(None)
    ModelNumber: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)
    SafetyObservations: List[
        "PatientQueryResponseMedicalEquipmentProductSafetyObservation"
    ] = Field(None)
    SerialNumber: Union[str, None] = Field(None)
    Status: "PatientQueryResponseMedicalEquipmentProductStatus" = Field(None)


class PatientQueryResponseMedicalEquipmentProductAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseMedicalEquipmentProductIdentifier(RedoxAbstractModel):

    ID: Union[str, None] = Field(None)
    IDType: Union[str, None] = Field(None)


class PatientQueryResponseMedicalEquipmentProductSafetyObservation(RedoxAbstractModel):

    AltCodes: List[
        "PatientQueryResponseMedicalEquipmentProductSafetyObservationAltCode"
    ] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseMedicalEquipmentProductSafetyObservationAltCode(
    RedoxAbstractModel
):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseMedicalEquipmentProductStatus(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseMedication(RedoxAbstractModel):

    Dose: "PatientQueryResponseMedicationDose" = Field(None)
    EndDate: Union[str, None] = Field(None)
    FreeTextSig: Union[str, None] = Field(None)
    Frequency: "PatientQueryResponseMedicationFrequency" = Field(None)
    Indications: List["PatientQueryResponseMedicationIndication"] = Field(None)
    IsPRN: Union[bool, None] = Field(None)
    NumberOfRefillsRemaining: Union[Number, None] = Field(None)
    Prescription: Union[bool, None] = Field(None)
    Product: "PatientQueryResponseMedicationProduct" = Field(None)
    Rate: "PatientQueryResponseMedicationRate" = Field(None)
    Route: "PatientQueryResponseMedicationRoute" = Field(None)
    StartDate: Union[str, None] = Field(None)
    Status: Union[str, None] = Field(None)
    SupplyOrder: "PatientQueryResponseMedicationSupplyOrder" = Field(None)


class PatientQueryResponseMedicationDose(RedoxAbstractModel):

    Quantity: Union[str, None] = Field(None)
    Units: Union[str, None] = Field(None)


class PatientQueryResponseMedicationFrequency(RedoxAbstractModel):

    EventCode: Union[str, None] = Field(None)
    InstitutionSpecified: Union[bool, None] = Field(None)
    Period: Union[str, None] = Field(None)
    PeriodMax: Union[str, None] = Field(None)
    Unit: Union[str, None] = Field(None)


class PatientQueryResponseMedicationIndication(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseMedicationIndicationAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseMedicationIndicationAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseMedicationProduct(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseMedicationProductAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseMedicationProductAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseMedicationRate(RedoxAbstractModel):

    Quantity: Union[str, None] = Field(None)
    Units: Union[str, None] = Field(None)


class PatientQueryResponseMedicationRoute(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseMedicationRouteAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseMedicationRouteAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseMedicationSupplyOrder(RedoxAbstractModel):

    EndDate: Union[str, None] = Field(None)
    NumberOfRefillsRemaining: Union[Number, None] = Field(None)
    Quantity: Union[str, None] = Field(None)
    StartDate: Union[str, None] = Field(None)
    Units: Union[str, None] = Field(None)


class PatientQueryResponseMeta(RedoxAbstractModel):

    DataModel: str = Field(...)
    Destinations: List["PatientQueryResponseMetaDestination"] = Field(None)
    EventDateTime: Union[str, None] = Field(None)
    EventType: str = Field(...)
    FacilityCode: Union[str, None] = Field(None)
    Logs: List["PatientQueryResponseMetaLog"] = Field(None)
    Message: "PatientQueryResponseMetaMessage" = Field(None)
    Source: "PatientQueryResponseMetaSource" = Field(None)
    Test: Union[bool, None] = Field(None)
    Transmission: "PatientQueryResponseMetaTransmission" = Field(None)


class PatientQueryResponseMetaDestination(RedoxAbstractModel):

    ID: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseMetaLog(RedoxAbstractModel):

    AttemptID: Union[str, None] = Field(None)
    ID: Union[str, None] = Field(None)


class PatientQueryResponseMetaMessage(RedoxAbstractModel):

    ID: Union[Number, None] = Field(None)


class PatientQueryResponseMetaSource(RedoxAbstractModel):

    ID: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseMetaTransmission(RedoxAbstractModel):

    ID: Union[Number, None] = Field(None)


class PatientQueryResponsePlanOfCare(RedoxAbstractModel):

    Encounters: List["PatientQueryResponsePlanOfCareEncounter"] = Field(None)
    MedicationAdministration: List[
        "PatientQueryResponsePlanOfCareMedicationAdministration"
    ] = Field(None)
    Orders: List["PatientQueryResponsePlanOfCareOrder"] = Field(None)
    Procedures: List["PatientQueryResponsePlanOfCareProcedure"] = Field(None)
    Services: List["PatientQueryResponsePlanOfCareService"] = Field(None)
    Supplies: List["PatientQueryResponsePlanOfCareSupply"] = Field(None)


class PatientQueryResponsePlanOfCareEncounter(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponsePlanOfCareEncounterAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    DateTime: Union[str, None] = Field(None)
    Identifiers: List["PatientQueryResponsePlanOfCareEncounterIdentifier"] = Field(None)
    Name: Union[str, None] = Field(None)
    Status: Union[str, None] = Field(None)


class PatientQueryResponsePlanOfCareEncounterAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponsePlanOfCareEncounterIdentifier(RedoxAbstractModel):

    ID: Union[str, None] = Field(None)
    IDType: Union[str, None] = Field(None)


class PatientQueryResponsePlanOfCareMedicationAdministration(RedoxAbstractModel):

    Dose: "PatientQueryResponsePlanOfCareMedicationAdministrationDose" = Field(None)
    EndDate: Union[str, None] = Field(None)
    Frequency: "PatientQueryResponsePlanOfCareMedicationAdministrationFrequency" = (
        Field(None)
    )
    Product: "PatientQueryResponsePlanOfCareMedicationAdministrationProduct" = Field(
        None
    )
    Rate: "PatientQueryResponsePlanOfCareMedicationAdministrationRate" = Field(None)
    Route: "PatientQueryResponsePlanOfCareMedicationAdministrationRoute" = Field(None)
    StartDate: Union[str, None] = Field(None)
    Status: Union[str, None] = Field(None)


class PatientQueryResponsePlanOfCareMedicationAdministrationDose(RedoxAbstractModel):

    Quantity: Union[str, None] = Field(None)
    Units: Union[str, None] = Field(None)


class PatientQueryResponsePlanOfCareMedicationAdministrationFrequency(
    RedoxAbstractModel
):

    Period: Union[str, None] = Field(None)
    Unit: Union[str, None] = Field(None)


class PatientQueryResponsePlanOfCareMedicationAdministrationProduct(RedoxAbstractModel):

    AltCodes: List[
        "PatientQueryResponsePlanOfCareMedicationAdministrationProductAltCode"
    ] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponsePlanOfCareMedicationAdministrationProductAltCode(
    RedoxAbstractModel
):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponsePlanOfCareMedicationAdministrationRate(RedoxAbstractModel):

    Quantity: Union[str, None] = Field(None)
    Units: Union[str, None] = Field(None)


class PatientQueryResponsePlanOfCareMedicationAdministrationRoute(RedoxAbstractModel):

    AltCodes: List[
        "PatientQueryResponsePlanOfCareMedicationAdministrationRouteAltCode"
    ] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponsePlanOfCareMedicationAdministrationRouteAltCode(
    RedoxAbstractModel
):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponsePlanOfCareOrder(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponsePlanOfCareOrderAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    DateTime: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)
    Status: Union[str, None] = Field(None)


class PatientQueryResponsePlanOfCareOrderAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponsePlanOfCareProcedure(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponsePlanOfCareProcedureAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    DateTime: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)
    Status: Union[str, None] = Field(None)


class PatientQueryResponsePlanOfCareProcedureAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponsePlanOfCareService(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponsePlanOfCareServiceAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    DateTime: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)
    Status: Union[str, None] = Field(None)


class PatientQueryResponsePlanOfCareServiceAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponsePlanOfCareSupply(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponsePlanOfCareSupplyAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    DateTime: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)
    Status: Union[str, None] = Field(None)


class PatientQueryResponsePlanOfCareSupplyAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseProblem(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseProblemAltCode"] = Field(None)
    Category: "PatientQueryResponseProblemCategory" = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Comment: Union[str, None] = Field(None)
    Comments: List["PatientQueryResponseProblemComment"] = Field(None)
    EndDate: Union[str, None] = Field(None)
    HealthStatus: "PatientQueryResponseProblemHealthStatus" = Field(None)
    Name: Union[str, None] = Field(None)
    StartDate: Union[str, None] = Field(None)
    Status: "PatientQueryResponseProblemStatus" = Field(None)


class PatientQueryResponseProblemAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseProblemCategory(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseProblemCategoryAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseProblemCategoryAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseProblemComment(RedoxAbstractModel):

    Text: Union[str, None] = Field(None)


class PatientQueryResponseProblemHealthStatus(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseProblemHealthStatusAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseProblemHealthStatusAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseProblemStatus(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseProcedures(RedoxAbstractModel):

    Observations: List["PatientQueryResponseProceduresObservation"] = Field(None)
    Procedures: List["PatientQueryResponseProceduresProcedure"] = Field(None)
    Services: List["PatientQueryResponseProceduresService"] = Field(None)


class PatientQueryResponseProceduresObservation(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseProceduresObservationAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Comments: List["PatientQueryResponseProceduresObservationComment"] = Field(None)
    DateTime: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)
    Status: Union[str, None] = Field(None)
    TargetSite: "PatientQueryResponseProceduresObservationTargetSite" = Field(None)


class PatientQueryResponseProceduresObservationAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseProceduresObservationComment(RedoxAbstractModel):

    Text: Union[str, None] = Field(None)


class PatientQueryResponseProceduresObservationTargetSite(RedoxAbstractModel):

    AltCodes: List[
        "PatientQueryResponseProceduresObservationTargetSiteAltCode"
    ] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseProceduresObservationTargetSiteAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseProceduresProcedure(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseProceduresProcedureAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Comments: List["PatientQueryResponseProceduresProcedureComment"] = Field(None)
    DateTime: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)
    Status: Union[str, None] = Field(None)
    TargetSite: "PatientQueryResponseProceduresProcedureTargetSite" = Field(None)


class PatientQueryResponseProceduresProcedureAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseProceduresProcedureComment(RedoxAbstractModel):

    Text: Union[str, None] = Field(None)


class PatientQueryResponseProceduresProcedureTargetSite(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseProceduresProcedureTargetSiteAltCode"] = Field(
        None
    )
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseProceduresProcedureTargetSiteAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseProceduresService(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseProceduresServiceAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Comments: List["PatientQueryResponseProceduresServiceComment"] = Field(None)
    DateTime: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)
    Status: Union[str, None] = Field(None)


class PatientQueryResponseProceduresServiceAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseProceduresServiceComment(RedoxAbstractModel):

    Text: Union[str, None] = Field(None)


class PatientQueryResponseResolvedProblem(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseResolvedProblemAltCode"] = Field(None)
    Category: "PatientQueryResponseResolvedProblemCategory" = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Comment: Union[str, None] = Field(None)
    Comments: List["PatientQueryResponseResolvedProblemComment"] = Field(None)
    EndDate: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)
    StartDate: Union[str, None] = Field(None)
    Status: "PatientQueryResponseResolvedProblemStatus" = Field(None)


class PatientQueryResponseResolvedProblemAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseResolvedProblemCategory(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseResolvedProblemCategoryAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseResolvedProblemCategoryAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseResolvedProblemComment(RedoxAbstractModel):

    Text: Union[str, None] = Field(None)


class PatientQueryResponseResolvedProblemStatus(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseResult(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseResultAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Encounter: "PatientQueryResponseResultEncounter" = Field(None)
    Name: Union[str, None] = Field(None)
    Observations: List["PatientQueryResponseResultObservation"] = Field(None)
    Producer: "PatientQueryResponseResultProducer" = Field(None)
    Specimen: "PatientQueryResponseResultSpecimen" = Field(None)
    Status: Union[str, None] = Field(None)


class PatientQueryResponseResultAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseResultEncounter(RedoxAbstractModel):

    DateTime: Union[str, None] = Field(None)
    EndDateTime: Union[str, None] = Field(None)
    Identifiers: List["PatientQueryResponseResultEncounterIdentifier"] = Field(None)
    Type: "PatientQueryResponseResultEncounterType" = Field(None)


class PatientQueryResponseResultEncounterIdentifier(RedoxAbstractModel):

    ID: Union[str, None] = Field(None)
    IDType: Union[str, None] = Field(None)


class PatientQueryResponseResultEncounterType(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseResultEncounterTypeAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseResultEncounterTypeAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseResultObservation(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseResultObservationAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    CodedValue: "PatientQueryResponseResultObservationCodedValue" = Field(None)
    Comments: List["PatientQueryResponseResultObservationComment"] = Field(None)
    DateTime: Union[str, None] = Field(None)
    Interpretation: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)
    ReferenceRange: "PatientQueryResponseResultObservationReferenceRange" = Field(None)
    Status: Union[str, None] = Field(None)
    Units: Union[str, None] = Field(None)
    Value: Union[str, None] = Field(None)
    ValueType: Union[str, None] = Field(None)


class PatientQueryResponseResultObservationAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseResultObservationCodedValue(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseResultObservationCodedValueAltCode"] = Field(
        None
    )
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseResultObservationCodedValueAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseResultObservationComment(RedoxAbstractModel):

    Text: Union[str, None] = Field(None)


class PatientQueryResponseResultObservationReferenceRange(RedoxAbstractModel):

    High: Union[str, None] = Field(None)
    Low: Union[str, None] = Field(None)
    Text: Union[str, None] = Field(None)


class PatientQueryResponseResultProducer(RedoxAbstractModel):

    Address: "PatientQueryResponseResultProducerAddress" = Field(None)
    ID: Union[str, None] = Field(None)
    IDType: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseResultProducerAddress(RedoxAbstractModel):

    City: Union[str, None] = Field(None)
    Country: Union[str, None] = Field(None)
    County: Union[str, None] = Field(None)
    State: Union[str, None] = Field(None)
    StreetAddress: Union[str, None] = Field(None)
    ZIP: Union[str, None] = Field(None)


class PatientQueryResponseResultSpecimen(RedoxAbstractModel):

    CollectionDateTime: Union[None] = Field(None)
    Identifiers: List[str] = Field(None)
    Source: "PatientQueryResponseResultSpecimenSource" = Field(None)
    TargetSite: "PatientQueryResponseResultSpecimenTargetSite" = Field(None)


class PatientQueryResponseResultSpecimenSource(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseResultSpecimenTargetSite(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseSocialHistory(RedoxAbstractModel):

    Observations: List["PatientQueryResponseSocialHistoryObservation"] = Field(None)
    Pregnancy: List["PatientQueryResponseSocialHistoryPregnancy"] = Field(None)
    TobaccoUse: List["PatientQueryResponseSocialHistoryTobaccoUse"] = Field(None)


class PatientQueryResponseSocialHistoryObservation(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseSocialHistoryObservationAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Comments: List["PatientQueryResponseSocialHistoryObservationComment"] = Field(None)
    EndDate: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)
    StartDate: Union[str, None] = Field(None)
    Value: "PatientQueryResponseSocialHistoryObservationValue" = Field(None)
    ValueText: Union[str, None] = Field(None)


class PatientQueryResponseSocialHistoryObservationAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseSocialHistoryObservationComment(RedoxAbstractModel):

    Text: Union[str, None] = Field(None)


class PatientQueryResponseSocialHistoryObservationValue(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseSocialHistoryObservationValueAltCode"] = Field(
        None
    )
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseSocialHistoryObservationValueAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseSocialHistoryPregnancy(RedoxAbstractModel):

    Comments: List["PatientQueryResponseSocialHistoryPregnancyComment"] = Field(None)
    EndDate: Union[str, None] = Field(None)
    EstimatedDelivery: Union[str, None] = Field(None)
    StartDate: Union[str, None] = Field(None)


class PatientQueryResponseSocialHistoryPregnancyComment(RedoxAbstractModel):

    Text: Union[str, None] = Field(None)


class PatientQueryResponseSocialHistoryTobaccoUse(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseSocialHistoryTobaccoUseAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Comments: List["PatientQueryResponseSocialHistoryTobaccoUseComment"] = Field(None)
    EndDate: Union[str, None] = Field(None)
    IsSmokingStatus: Union[bool, None] = Field(None)
    Name: Union[str, None] = Field(None)
    StartDate: Union[str, None] = Field(None)


class PatientQueryResponseSocialHistoryTobaccoUseAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseSocialHistoryTobaccoUseComment(RedoxAbstractModel):

    Text: Union[str, None] = Field(None)


class PatientQueryResponseVitalSign(RedoxAbstractModel):

    DateTime: Union[str, None] = Field(None)
    Observations: List["PatientQueryResponseVitalSignObservation"] = Field(None)


class PatientQueryResponseVitalSignObservation(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseVitalSignObservationAltCode"] = Field(None)
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Comments: List["PatientQueryResponseVitalSignObservationComment"] = Field(None)
    DateTime: Union[str, None] = Field(None)
    Interpretation: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)
    Status: Union[str, None] = Field(None)
    TargetSite: "PatientQueryResponseVitalSignObservationTargetSite" = Field(None)
    Units: Union[str, None] = Field(None)
    Value: Union[str, None] = Field(None)


class PatientQueryResponseVitalSignObservationAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseVitalSignObservationComment(RedoxAbstractModel):

    Text: Union[str, None] = Field(None)


class PatientQueryResponseVitalSignObservationTargetSite(RedoxAbstractModel):

    AltCodes: List["PatientQueryResponseVitalSignObservationTargetSiteAltCode"] = Field(
        None
    )
    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class PatientQueryResponseVitalSignObservationTargetSiteAltCode(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    CodeSystem: Union[str, None] = Field(None)
    CodeSystemName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


PatientQueryResponse.update_forward_refs()
PatientQueryResponseAdvanceDirective.update_forward_refs()
PatientQueryResponseAdvanceDirectiveCustodian.update_forward_refs()
PatientQueryResponseAdvanceDirectiveType.update_forward_refs()
PatientQueryResponseAllergy.update_forward_refs()
PatientQueryResponseAllergyReaction.update_forward_refs()
PatientQueryResponseAllergySubstance.update_forward_refs()
PatientQueryResponseAllergyType.update_forward_refs()
PatientQueryResponseCareTeam.update_forward_refs()
PatientQueryResponseCareTeamEncounter.update_forward_refs()
PatientQueryResponseCareTeamEncounterType.update_forward_refs()
PatientQueryResponseCareTeamMember.update_forward_refs()
PatientQueryResponseCareTeamMemberRole.update_forward_refs()
PatientQueryResponseCareTeamOrganization.update_forward_refs()
PatientQueryResponseCareTeamOrganizationType.update_forward_refs()
PatientQueryResponseCareTeamType.update_forward_refs()
PatientQueryResponseEncounter.update_forward_refs()
PatientQueryResponseEncounterDiagnosis.update_forward_refs()
PatientQueryResponseEncounterDischargeDisposition.update_forward_refs()
PatientQueryResponseEncounterLocation.update_forward_refs()
PatientQueryResponseEncounterLocationType.update_forward_refs()
PatientQueryResponseEncounterProvider.update_forward_refs()
PatientQueryResponseEncounterProviderRole.update_forward_refs()
PatientQueryResponseEncounterReasonForVisit.update_forward_refs()
PatientQueryResponseEncounterType.update_forward_refs()
PatientQueryResponseFamilyHistory.update_forward_refs()
PatientQueryResponseFamilyHistoryProblem.update_forward_refs()
PatientQueryResponseFamilyHistoryRelation.update_forward_refs()
PatientQueryResponseFunctionalStatus.update_forward_refs()
PatientQueryResponseFunctionalStatusObservation.update_forward_refs()
PatientQueryResponseFunctionalStatusObservationCodedValue.update_forward_refs()
PatientQueryResponseFunctionalStatusSupply.update_forward_refs()
PatientQueryResponseGoal.update_forward_refs()
PatientQueryResponseGoalCodedValue.update_forward_refs()
PatientQueryResponseGoalMilestone.update_forward_refs()
PatientQueryResponseGoalMilestoneCodedValue.update_forward_refs()
PatientQueryResponseHeader.update_forward_refs()
PatientQueryResponseHeaderDocument.update_forward_refs()
PatientQueryResponseHeaderDocumentAuthor.update_forward_refs()
PatientQueryResponseHeaderDocumentCustodian.update_forward_refs()
PatientQueryResponseHeaderDocumentCustodianType.update_forward_refs()
PatientQueryResponseHeaderPatient.update_forward_refs()
PatientQueryResponseHeaderPatientDemographics.update_forward_refs()
PatientQueryResponseHeaderPatientOrganization.update_forward_refs()
PatientQueryResponseHeaderPatientOrganizationType.update_forward_refs()
PatientQueryResponseHeaderPCP.update_forward_refs()
PatientQueryResponseHealthConcern.update_forward_refs()
PatientQueryResponseHealthConcernCategory.update_forward_refs()
PatientQueryResponseHealthConcernTargetSite.update_forward_refs()
PatientQueryResponseImmunization.update_forward_refs()
PatientQueryResponseImmunizationProduct.update_forward_refs()
PatientQueryResponseImmunizationRoute.update_forward_refs()
PatientQueryResponseInsurance.update_forward_refs()
PatientQueryResponseInsuranceCompany.update_forward_refs()
PatientQueryResponseInsuranceInsured.update_forward_refs()
PatientQueryResponseMedicalEquipment.update_forward_refs()
PatientQueryResponseMedicalEquipmentProcedure.update_forward_refs()
PatientQueryResponseMedicalEquipmentProcedureTargetSite.update_forward_refs()
PatientQueryResponseMedicalEquipmentProduct.update_forward_refs()
PatientQueryResponseMedicalEquipmentProductSafetyObservation.update_forward_refs()
PatientQueryResponseMedication.update_forward_refs()
PatientQueryResponseMedicationIndication.update_forward_refs()
PatientQueryResponseMedicationProduct.update_forward_refs()
PatientQueryResponseMedicationRoute.update_forward_refs()
PatientQueryResponseMeta.update_forward_refs()
PatientQueryResponsePlanOfCare.update_forward_refs()
PatientQueryResponsePlanOfCareEncounter.update_forward_refs()
PatientQueryResponsePlanOfCareMedicationAdministration.update_forward_refs()
PatientQueryResponsePlanOfCareMedicationAdministrationProduct.update_forward_refs()
PatientQueryResponsePlanOfCareMedicationAdministrationRoute.update_forward_refs()
PatientQueryResponsePlanOfCareOrder.update_forward_refs()
PatientQueryResponsePlanOfCareProcedure.update_forward_refs()
PatientQueryResponsePlanOfCareService.update_forward_refs()
PatientQueryResponsePlanOfCareSupply.update_forward_refs()
PatientQueryResponseProblem.update_forward_refs()
PatientQueryResponseProblemCategory.update_forward_refs()
PatientQueryResponseProblemHealthStatus.update_forward_refs()
PatientQueryResponseProcedures.update_forward_refs()
PatientQueryResponseProceduresObservation.update_forward_refs()
PatientQueryResponseProceduresObservationTargetSite.update_forward_refs()
PatientQueryResponseProceduresProcedure.update_forward_refs()
PatientQueryResponseProceduresProcedureTargetSite.update_forward_refs()
PatientQueryResponseProceduresService.update_forward_refs()
PatientQueryResponseResolvedProblem.update_forward_refs()
PatientQueryResponseResolvedProblemCategory.update_forward_refs()
PatientQueryResponseResult.update_forward_refs()
PatientQueryResponseResultEncounter.update_forward_refs()
PatientQueryResponseResultEncounterType.update_forward_refs()
PatientQueryResponseResultObservation.update_forward_refs()
PatientQueryResponseResultObservationCodedValue.update_forward_refs()
PatientQueryResponseResultProducer.update_forward_refs()
PatientQueryResponseResultSpecimen.update_forward_refs()
PatientQueryResponseSocialHistory.update_forward_refs()
PatientQueryResponseSocialHistoryObservation.update_forward_refs()
PatientQueryResponseSocialHistoryObservationValue.update_forward_refs()
PatientQueryResponseSocialHistoryPregnancy.update_forward_refs()
PatientQueryResponseSocialHistoryTobaccoUse.update_forward_refs()
PatientQueryResponseVitalSign.update_forward_refs()
PatientQueryResponseVitalSignObservation.update_forward_refs()
PatientQueryResponseVitalSignObservationTargetSite.update_forward_refs()
