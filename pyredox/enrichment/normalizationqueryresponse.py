# -*- coding: utf-8 -*-
# ----  AUTO-GENERATED BY redox_lib_gen. DO NOT MODIFY MANUALLY!!  ---- #

from typing import List, Union

from pydantic import Field

from ..abstract_base import EventTypeAbstractModel, RedoxAbstractModel
from ..field_types import Number


class NormalizationQueryResponse(EventTypeAbstractModel):
    Entries: List["NormalizationQueryResponseEntry"] = Field(...)
    Meta: "NormalizationQueryResponseMeta" = Field(...)


class NormalizationQueryResponseEntry(RedoxAbstractModel):
    Category: str = Field(...)
    Error: "NormalizationQueryResponseEntryError" = Field(None)
    Normalization: List["NormalizationQueryResponseEntryNormalization"] = Field(None)
    Status: str = Field(...)
    Submitted: "NormalizationQueryResponseEntrySubmitted" = Field(...)
    Transaction: "NormalizationQueryResponseEntryTransaction" = Field(...)


class NormalizationQueryResponseEntryError(RedoxAbstractModel):
    Code: Union[str, None] = Field(None)
    Message: Union[str, None] = Field(None)


class NormalizationQueryResponseEntryNormalization(RedoxAbstractModel):
    LexicalReference: "NormalizationQueryResponseEntryNormalizationLexicalReference" = (
        Field(None)
    )
    Matches: List["NormalizationQueryResponseEntryNormalizationMatch"] = Field(None)
    Score: "NormalizationQueryResponseEntryNormalizationScore" = Field(None)


class NormalizationQueryResponseEntryNormalizationLexicalReference(RedoxAbstractModel):
    Code: Union[str, None] = Field(None)
    DefaultCode: Union[str, None] = Field(None)
    DefaultName: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class NormalizationQueryResponseEntryNormalizationMatch(RedoxAbstractModel):
    Codes: List["NormalizationQueryResponseEntryNormalizationMatchCode"] = Field(None)
    Codeset: Union[str, None] = Field(None)
    Status: Union[str, None] = Field(None)


class NormalizationQueryResponseEntryNormalizationMatchCode(RedoxAbstractModel):
    Code: Union[str, None] = Field(None)
    MatchPriority: Union[str, None] = Field(None)
    Variants: List[
        "NormalizationQueryResponseEntryNormalizationMatchCodeVariant"
    ] = Field(None)


class NormalizationQueryResponseEntryNormalizationMatchCodeVariant(RedoxAbstractModel):
    ExtendedProperties: List[
        "NormalizationQueryResponseEntryNormalizationMatchCodeVariantExtendedProperty"
    ] = Field(None)
    Title: Union[str, None] = Field(None)
    TitleStatus: Union[str, None] = Field(None)
    TitleType: Union[str, None] = Field(None)


class NormalizationQueryResponseEntryNormalizationMatchCodeVariantExtendedProperty(
    RedoxAbstractModel
):
    Category: Union[str, None] = Field(None)
    Properties: List[
        "NormalizationQueryResponseEntryNormalizationMatchCodeVariantExtendedPropertyProperty"
    ] = Field(None)


class NormalizationQueryResponseEntryNormalizationMatchCodeVariantExtendedPropertyProperty(
    RedoxAbstractModel
):
    Property: Union[str, None] = Field(None)
    Value: Union[str, None] = Field(None)


class NormalizationQueryResponseEntryNormalizationScore(RedoxAbstractModel):
    Description: Union[str, None] = Field(None)
    Value: Union[Number, None] = Field(None)


class NormalizationQueryResponseEntrySubmitted(RedoxAbstractModel):
    Category: str = Field(...)
    Code: Union[str, None] = Field(None)
    Codeset: Union[str, None] = Field(None)
    Description: Union[str, None] = Field(None)
    EntryID: Union[str, None] = Field(None)


class NormalizationQueryResponseEntryTransaction(RedoxAbstractModel):
    ID: str = Field(...)
    VendorID: str = Field(...)


class NormalizationQueryResponseMeta(RedoxAbstractModel):
    DataModel: str = Field(...)
    Destinations: List["NormalizationQueryResponseMetaDestination"] = Field(None)
    EventDateTime: Union[str, None] = Field(None)
    EventType: str = Field(...)
    FacilityCode: Union[str, None] = Field(None)
    Logs: List["NormalizationQueryResponseMetaLog"] = Field(None)
    Message: "NormalizationQueryResponseMetaMessage" = Field(None)
    Source: "NormalizationQueryResponseMetaSource" = Field(None)
    Test: Union[bool, None] = Field(None)
    Transmission: "NormalizationQueryResponseMetaTransmission" = Field(None)


class NormalizationQueryResponseMetaDestination(RedoxAbstractModel):
    ID: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class NormalizationQueryResponseMetaLog(RedoxAbstractModel):
    AttemptID: Union[str, None] = Field(None)
    ID: Union[str, None] = Field(None)


class NormalizationQueryResponseMetaMessage(RedoxAbstractModel):
    ID: Union[Number, None] = Field(None)


class NormalizationQueryResponseMetaSource(RedoxAbstractModel):
    ID: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class NormalizationQueryResponseMetaTransmission(RedoxAbstractModel):
    ID: Union[Number, None] = Field(None)


NormalizationQueryResponse.update_forward_refs()
NormalizationQueryResponseEntry.update_forward_refs()
NormalizationQueryResponseEntryNormalization.update_forward_refs()
NormalizationQueryResponseEntryNormalizationMatch.update_forward_refs()
NormalizationQueryResponseEntryNormalizationMatchCode.update_forward_refs()
NormalizationQueryResponseEntryNormalizationMatchCodeVariant.update_forward_refs()
NormalizationQueryResponseEntryNormalizationMatchCodeVariantExtendedProperty.update_forward_refs()
NormalizationQueryResponseMeta.update_forward_refs()
