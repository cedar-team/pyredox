# -*- coding: utf-8 -*-
# ----  AUTO-GENERATED BY redox_lib_gen. DO NOT MODIFY MANUALLY!!  ---- #

from typing import List, Union

from pydantic import Field

from ..abstract_base import EventTypeAbstractModel, RedoxAbstractModel
from ..field_types import Number


class ProviderQueryResponse(EventTypeAbstractModel):

    Meta: "ProviderQueryResponseMeta" = Field(...)
    Providers: List["ProviderQueryResponseProvider"] = Field(...)


class ProviderQueryResponseMeta(RedoxAbstractModel):

    DataModel: str = Field(...)
    Destinations: List["ProviderQueryResponseMetaDestination"] = Field(None)
    EventDateTime: Union[str, None] = Field(None)
    EventType: str = Field(...)
    FacilityCode: Union[str, None] = Field(None)
    Logs: List["ProviderQueryResponseMetaLog"] = Field(None)
    Message: "ProviderQueryResponseMetaMessage" = Field(None)
    Source: "ProviderQueryResponseMetaSource" = Field(None)
    Test: Union[bool, None] = Field(None)
    Transmission: "ProviderQueryResponseMetaTransmission" = Field(None)


class ProviderQueryResponseMetaDestination(RedoxAbstractModel):

    ID: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class ProviderQueryResponseMetaLog(RedoxAbstractModel):

    AttemptID: Union[str, None] = Field(None)
    ID: Union[str, None] = Field(None)


class ProviderQueryResponseMetaMessage(RedoxAbstractModel):

    ID: Union[Number, None] = Field(None)


class ProviderQueryResponseMetaSource(RedoxAbstractModel):

    ID: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)


class ProviderQueryResponseMetaTransmission(RedoxAbstractModel):

    ID: Union[Number, None] = Field(None)


class ProviderQueryResponseProvider(RedoxAbstractModel):

    Demographics: "ProviderQueryResponseProviderDemographics" = Field(None)
    Identifiers: List["ProviderQueryResponseProviderIdentifier"] = Field(...)
    IsActive: bool = Field(...)
    Qualifications: List["ProviderQueryResponseProviderQualification"] = Field(None)
    Roles: List["ProviderQueryResponseProviderRole"] = Field(None)


class ProviderQueryResponseProviderDemographics(RedoxAbstractModel):

    Addresses: List["ProviderQueryResponseProviderDemographicsAddress"] = Field(None)
    Credentials: List[str] = Field(None)
    DOB: Union[str, None] = Field(None)
    EmailAddresses: List[str] = Field(None)
    FirstName: Union[str, None] = Field(None)
    Languages: List[str] = Field(None)
    LastName: Union[str, None] = Field(None)
    MiddleName: Union[str, None] = Field(None)
    PhoneNumber: "ProviderQueryResponseProviderDemographicsPhoneNumber" = Field(None)
    Sex: Union[str, None] = Field(None)


class ProviderQueryResponseProviderDemographicsAddress(RedoxAbstractModel):

    City: Union[str, None] = Field(None)
    Country: Union[str, None] = Field(None)
    County: Union[str, None] = Field(None)
    State: Union[str, None] = Field(None)
    StreetAddress: Union[str, None] = Field(None)
    Use: Union[str, None] = Field(None)
    ZIP: Union[str, None] = Field(None)


class ProviderQueryResponseProviderDemographicsPhoneNumber(RedoxAbstractModel):

    Home: Union[str, None] = Field(None)
    Mobile: Union[str, None] = Field(None)
    Office: Union[str, None] = Field(None)


class ProviderQueryResponseProviderIdentifier(RedoxAbstractModel):

    ID: str = Field(...)
    IDType: Union[str, None] = Field(None)


class ProviderQueryResponseProviderQualification(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    Codeset: Union[str, None] = Field(None)
    Description: Union[str, None] = Field(None)
    EndDate: Union[str, None] = Field(None)
    Identifiers: List["ProviderQueryResponseProviderQualificationIdentifier"] = Field(
        None
    )
    StartDate: Union[str, None] = Field(None)


class ProviderQueryResponseProviderQualificationIdentifier(RedoxAbstractModel):

    ID: Union[str, None] = Field(None)
    IDType: Union[str, None] = Field(None)


class ProviderQueryResponseProviderRole(RedoxAbstractModel):

    Availability: List["ProviderQueryResponseProviderRoleAvailability"] = Field(None)
    Identifiers: List["ProviderQueryResponseProviderRoleIdentifier"] = Field(None)
    Locations: List["ProviderQueryResponseProviderRoleLocation"] = Field(None)
    Organization: "ProviderQueryResponseProviderRoleOrganization" = Field(None)
    Services: List["ProviderQueryResponseProviderRoleService"] = Field(None)
    Specialties: List["ProviderQueryResponseProviderRoleSpecialty"] = Field(None)


class ProviderQueryResponseProviderRoleAvailability(RedoxAbstractModel):

    AvailableEndTime: Union[str, None] = Field(None)
    AvailableStartTime: Union[str, None] = Field(None)
    Days: List[str] = Field(None)


class ProviderQueryResponseProviderRoleIdentifier(RedoxAbstractModel):

    ID: Union[str, None] = Field(None)
    IDType: Union[str, None] = Field(None)


class ProviderQueryResponseProviderRoleLocation(RedoxAbstractModel):

    Address: "ProviderQueryResponseProviderRoleLocationAddress" = Field(None)
    Description: Union[str, None] = Field(None)
    EmailAddresses: List[str] = Field(None)
    Identifiers: List["ProviderQueryResponseProviderRoleLocationIdentifier"] = Field(
        None
    )
    Name: Union[str, None] = Field(None)
    PhoneNumber: "ProviderQueryResponseProviderRoleLocationPhoneNumber" = Field(None)
    Status: Union[str, None] = Field(None)


class ProviderQueryResponseProviderRoleLocationAddress(RedoxAbstractModel):

    City: Union[str, None] = Field(None)
    Country: Union[str, None] = Field(None)
    County: Union[str, None] = Field(None)
    State: Union[str, None] = Field(None)
    StreetAddress: Union[str, None] = Field(None)
    ZIP: Union[str, None] = Field(None)


class ProviderQueryResponseProviderRoleLocationIdentifier(RedoxAbstractModel):

    ID: Union[str, None] = Field(None)
    IDType: Union[str, None] = Field(None)


class ProviderQueryResponseProviderRoleLocationPhoneNumber(RedoxAbstractModel):

    Office: Union[str, None] = Field(None)


class ProviderQueryResponseProviderRoleOrganization(RedoxAbstractModel):

    Address: "ProviderQueryResponseProviderRoleOrganizationAddress" = Field(None)
    Identifiers: List[
        "ProviderQueryResponseProviderRoleOrganizationIdentifier"
    ] = Field(None)
    IsActive: Union[str, None] = Field(None)
    Name: Union[str, None] = Field(None)
    Type: Union[str, None] = Field(None)


class ProviderQueryResponseProviderRoleOrganizationAddress(RedoxAbstractModel):

    City: Union[str, None] = Field(None)
    Country: Union[str, None] = Field(None)
    County: Union[str, None] = Field(None)
    State: Union[str, None] = Field(None)
    StreetAddress: Union[str, None] = Field(None)
    ZIP: Union[str, None] = Field(None)


class ProviderQueryResponseProviderRoleOrganizationIdentifier(RedoxAbstractModel):

    ID: Union[str, None] = Field(None)
    IDType: Union[str, None] = Field(None)


class ProviderQueryResponseProviderRoleService(RedoxAbstractModel):

    Description: Union[str, None] = Field(None)
    Identifiers: List["ProviderQueryResponseProviderRoleServiceIdentifier"] = Field(
        None
    )
    PhoneNumber: "ProviderQueryResponseProviderRoleServicePhoneNumber" = Field(None)
    Type: Union[str, None] = Field(None)


class ProviderQueryResponseProviderRoleServiceIdentifier(RedoxAbstractModel):

    ID: Union[str, None] = Field(None)
    IDType: Union[str, None] = Field(None)


class ProviderQueryResponseProviderRoleServicePhoneNumber(RedoxAbstractModel):

    Office: Union[str, None] = Field(None)


class ProviderQueryResponseProviderRoleSpecialty(RedoxAbstractModel):

    Code: Union[str, None] = Field(None)
    Codeset: Union[str, None] = Field(None)
    Description: Union[str, None] = Field(None)


ProviderQueryResponse.update_forward_refs()
ProviderQueryResponseMeta.update_forward_refs()
ProviderQueryResponseProvider.update_forward_refs()
ProviderQueryResponseProviderDemographics.update_forward_refs()
ProviderQueryResponseProviderQualification.update_forward_refs()
ProviderQueryResponseProviderRole.update_forward_refs()
ProviderQueryResponseProviderRoleLocation.update_forward_refs()
ProviderQueryResponseProviderRoleOrganization.update_forward_refs()
ProviderQueryResponseProviderRoleService.update_forward_refs()
